// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PozemkoveUpravy.Data;

#nullable disable

namespace PozemkoveUpravy.Migrations
{
    [DbContext(typeof(PozemkoveUpravyContext))]
    [Migration("20230804204254_PozemkovaUpravaMigrace")]
    partial class PozemkovaUpravaMigrace
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PozemkoveUpravy.Models.OceneniPorostu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cena_v_Kc")
                        .HasColumnType("int");

                    b.Property<string>("Druh_porostu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PozemekId")
                        .HasColumnType("int");

                    b.Property<int>("VlastnikId")
                        .HasColumnType("int");

                    b.Property<float>("Vymera_v_m2")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PozemekId");

                    b.ToTable("OceneniPorostu");
                });

            modelBuilder.Entity("PozemkoveUpravy.Models.OceneniPozemku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BPEJ")
                        .HasColumnType("int");

                    b.Property<int>("Cena_v_Kc")
                        .HasColumnType("int");

                    b.Property<int>("PozemekId")
                        .HasColumnType("int");

                    b.Property<int>("VlastnikId")
                        .HasColumnType("int");

                    b.Property<float>("Vymera_v_m2")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("PozemekId");

                    b.ToTable("OceneniPozemku");
                });

            modelBuilder.Entity("PozemkoveUpravy.Models.Pozemek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cislo_pozemku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Druh_pozemku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("List_vlastnictvi")
                        .HasColumnType("int");

                    b.Property<int>("VlastnikId")
                        .HasColumnType("int");

                    b.Property<float>("Vymera_v_m2")
                        .HasColumnType("real");

                    b.Property<float>("Vzdalenost_v_m")
                        .HasColumnType("real");

                    b.Property<string>("Zpusob_ochrany_nemovitosti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zpusob_vyuziti_nemovitosti")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("VlastnikId");

                    b.ToTable("Pozemek");
                });

            modelBuilder.Entity("PozemkoveUpravy.Models.PozemkovaUprava", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Forma_pozemkove_upravy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Katastralni_uzemi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Konec")
                        .HasColumnType("datetime2");

                    b.Property<string>("Kraj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Obec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Okres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Pocatek")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pozemkovy_urad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PozemkovaUprava");
                });

            modelBuilder.Entity("PozemkoveUpravy.Models.Vlastnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cislo_popisne")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Jmeno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("List_vlastnictvi")
                        .HasColumnType("int");

                    b.Property<string>("Obec")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PSC")
                        .HasColumnType("int");

                    b.Property<int>("PozemkovaUpravaId")
                        .HasColumnType("int");

                    b.Property<string>("Prijmeni")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefon")
                        .HasColumnType("int");

                    b.Property<string>("Ulice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PozemkovaUpravaId");

                    b.ToTable("Vlastnik");
                });

            modelBuilder.Entity("PozemkoveUpravy.Models.OceneniPorostu", b =>
                {
                    b.HasOne("PozemkoveUpravy.Models.Pozemek", "Pozemky")
                        .WithMany("OceneniPorostuA")
                        .HasForeignKey("PozemekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pozemky");
                });

            modelBuilder.Entity("PozemkoveUpravy.Models.OceneniPozemku", b =>
                {
                    b.HasOne("PozemkoveUpravy.Models.Pozemek", "Pozemky")
                        .WithMany("OceneniPozemkuA")
                        .HasForeignKey("PozemekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pozemky");
                });

            modelBuilder.Entity("PozemkoveUpravy.Models.Pozemek", b =>
                {
                    b.HasOne("PozemkoveUpravy.Models.Vlastnik", "Vlastnici")
                        .WithMany("Pozemky")
                        .HasForeignKey("VlastnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vlastnici");
                });

            modelBuilder.Entity("PozemkoveUpravy.Models.Vlastnik", b =>
                {
                    b.HasOne("PozemkoveUpravy.Models.PozemkovaUprava", "PozemkoveUpravy")
                        .WithMany("Vlastnici")
                        .HasForeignKey("PozemkovaUpravaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PozemkoveUpravy");
                });

            modelBuilder.Entity("PozemkoveUpravy.Models.Pozemek", b =>
                {
                    b.Navigation("OceneniPorostuA");

                    b.Navigation("OceneniPozemkuA");
                });

            modelBuilder.Entity("PozemkoveUpravy.Models.PozemkovaUprava", b =>
                {
                    b.Navigation("Vlastnici");
                });

            modelBuilder.Entity("PozemkoveUpravy.Models.Vlastnik", b =>
                {
                    b.Navigation("Pozemky");
                });
#pragma warning restore 612, 618
        }
    }
}
